#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'active_support/core_ext'

$:.push File.expand_path('../../lib', __FILE__)
require 'tokyo_manager'
require 'tokyo_manager/version'

module TokyoManager
  # Provides an executable that can be used to start new instances of
  # TokyoTyrant. By default an instance is started to store the data for one
  # month from the current date. This can be overridden by providing a date on
  # the command line.
  #
  # Example usage:
  #
  #     tokyo-manager start --master
  #     tokyo-manager start --master --date 201202
  #     tokyo-manager start --slave
  #     tokyo-manager start --slave --date 201202
  #     tokyo-manager start --slave --master-host tt.ssbe.api
  class CLI < Thor
    include Thor::Actions
    default_task :help

    map '-v' => 'version'
    map '--version' => 'version'

    desc 'start', 'Start a new instance of TokyoTyrant'
    method_option :master, :type => :boolean, :default => false, :alias => '-m', :desc => 'start a master instance'
    method_option :slave, :type => :boolean, :default => false, :alias => '-s', :desc => 'start a slave instance'
    method_option :date, :type => :string, :alias => '-d', :desc => 'the date to start an instance for (YYYYMM)'
    method_option :'master-host', :type => :string, :alias => '-h', :desc => 'when starting a slave, the host the master is on'

    # Starts a new TokyoTyrant server instance as either a master or a slave.
    def start
      if options.master?
        start_master(options)
      elsif options.slave?
        start_slave(options)
      else
        invoke :help, [:start]
      end
    end

    desc 'version', 'Shows the version'

    # Prints the current version of the gem.
    def version
      puts "tokyo_manager #{TokyoManager::VERSION}"
    end

    no_tasks do
      # Parses the date given on the command line or returns the beginning of
      # next month if no date was given. This date is used to determine which
      # date to start an instance for.
      def instance_date(options)
        if options.date
          Date.new(options.date[0..3].to_i, options.date[4..5].to_i)
        else
          Date.today.next_month.beginning_of_month
        end
      end

      # Starts a master TokyoTyrant instance.
      def start_master(options)
        date = instance_date(options)
        puts "Starting master instance of TokyoTyrant for #{date.strftime('%m/%Y')}"

        begin
          TokyoManager.start_master_for_date(date)
        rescue => e
          puts e.message
        end
      end

      # Starts a slave TokyoTyrant instance.
      def start_slave(options)
        date = instance_date(options)
        puts "Starting slave instance of TokyoTyrant for #{date.strftime('%m/%Y')}"

        begin
          TokyoManager.start_slave_for_date(date, options[:'master-host'])
        rescue => e
          puts e.message
        end
      end
    end
  end
end

TokyoManager::CLI.start

# vim: filetype=ruby
